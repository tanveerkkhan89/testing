name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean package
        working-directory: your-java-project-directory

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      - name: Terraform Init
        run: terraform init
        working-directory: eks-tanveer_cluster

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: eks-tanveer_cluster

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: eks-tanveer_cluster
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Test Application
        run: |
          # Replace the following URL with the actual URL of your application
          APP_URL="http://my-app.example.com" # Example URL
          RESPONSE=$(curl --write-out "%{http_code}" --silent --output /dev/null "$APP_URL")
          if [ "$RESPONSE" -ne 200 ]; then
            echo "Application is not reachable. HTTP response code: $RESPONSE"
            exit 1
          else
            echo "Application is reachable. HTTP response code: $RESPONSE"
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

  cleanup:
    runs-on: ubuntu-latest
    needs: deploy
    if: failure()  # Run this job only if the deploy job fails
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: eks-tanveer_cluster
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
